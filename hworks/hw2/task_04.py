# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏
# –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
# üìå –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
# –≤ —Ç–µ–∫—Å—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.


from pathlib import PurePath, Path
from flask import Flask, request, render_template
from werkzeug.utils import secure_filename
from markupsafe import escape

app = Flask(__name__)


@app.route('/')
def index():
    return render_template('second.html')


@app.route('/next')
def next():
    return '–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!'


@app.route('/post_img/', methods=['GET', 'POST'])
def post_img():
    context = {
        'task': '–ó–∞–¥–∞–Ω–∏–µ_2'
    }
    if request.method == 'POST':
        file = request.files.get('file')
        file_name = secure_filename(file.filename)
        file.save(PurePath.joinpath(Path.cwd(), 'uploads', file_name))
        return f"–§–∞–π–ª {escape(file_name)} –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    return render_template('task_02.html', **context)


@app.route('/enter/', methods=['GET', 'POST'])
def enter():
    context = {
        'task': '–ó–∞–¥–∞–Ω–∏–µ3'
    }
    verification = {'login': '321',
                    'password': '123'
                    }
    if request.method == 'POST':
        login = request.form.get('login')
        password = request.form.get('password')
        if login == verification['login'] and password == verification['password']:
            return f"–í—Ö–æ–¥ {escape(login)} –≤—ã–ø–æ–ª–Ω–µ–Ω"
    return render_template('task4.html', **context)


@app.route('/letters/', methods=['GET', 'POST'])
def letters():
    context = {
        'task': '–ó–∞–¥–∞–Ω–∏–µ4'
    }
    if request.method == 'POST':
        text = request.form.get('text')
        length = len(text.split())
        return f"–¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ = {length} "
    return render_template('task4.html', **context)


if __name__ == '__main__':
    app.run(debug=True)
